---
import { SitecorePageProps } from "lib/page-props";
import config from "../temp/config";
import Layout from "@sitecore-jss/sitecore-jss/layout";

const { LayoutServicePageState } = Layout;

const props: SitecorePageProps = Astro.props.pageProps as SitecorePageProps;
const sitecoreEdgeUrl = config.sitecoreEdgeUrl;
const sitecoreEdgeContextId = config.sitecoreEdgeContextId;
const siteName = props.layoutData?.sitecore?.context.site?.name || config.sitecoreSiteName;

const pageState = props.layoutData?.sitecore?.context.pageState;

/**
 * The Bootstrap component is the entry point for performing any initialization logic
 * that needs to happen early in the application's lifecycle.
 */
---

<astro-bootstrap
  data-page-state={pageState}
  data-expected-state={LayoutServicePageState.Normal}
  data-sitecore-edge-url={sitecoreEdgeUrl}
  data-sitecore-edge-context-id={sitecoreEdgeContextId}
  data-site-name={siteName}
>
</astro-bootstrap>

<script>
  import { CloudSDK } from "@sitecore-cloudsdk/core/browser";
  import "@sitecore-cloudsdk/events/browser";

  class Bootstrap extends HTMLElement {
    connectedCallback() {
      const pageState = this.dataset.pageState;
      const expectedState = this.dataset.pageState;
      const sitecoreEdgeUrl: any = this.dataset.sitecoreEdgeUrl;
      const sitecoreEdgeContextId: any = this.dataset.sitecoreEdgeContextId;
      const siteName: any = this.dataset.siteName;

      // Browser ClientSDK init allows for page view events to be tracked
      if (import.meta.env.MODE === "development")
        console.debug(
          "Browser Events SDK is not initialized in development environment",
        );
      else if (pageState !== expectedState)
        console.debug(
          "Browser Events SDK is not initialized in edit and preview modes",
        );
      else {
        CloudSDK({
          sitecoreEdgeUrl: sitecoreEdgeUrl,
          sitecoreEdgeContextId: sitecoreEdgeContextId,
          siteName: siteName,
          enableBrowserCookie: true,
          // Replace with the top level cookie domain of the website that is being integrated e.g ".example.com" and not "www.example.com"
          cookieDomain: window.location.hostname.replace(/^www\./, ""),
        })
          .addEvents()
          .initialize();
      }
    }
  }

  customElements.define("astro-bootstrap", Bootstrap);
</script>
